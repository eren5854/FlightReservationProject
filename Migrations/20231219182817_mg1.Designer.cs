// <auto-generated />
using System;
using FlightReservationProjectV2.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightReservationProjectV2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231219182817_mg1")]
    partial class mg1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EntityLayer.Concrete.CityDetail", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"), 1L, 1);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FlightDeatailId")
                        .HasColumnType("int");

                    b.Property<int>("FlightDetailFlightDeatailId")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("FlightDetailFlightDeatailId");

                    b.ToTable("CityDetails");
                });

            modelBuilder.Entity("EntityLayer.Concrete.FlightDetail", b =>
                {
                    b.Property<int>("FlightDeatailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightDeatailId"), 1L, 1);

                    b.Property<DateTime>("DateOfReturn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfreturnTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Departuretime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlightStatus")
                        .HasColumnType("bit");

                    b.Property<int>("UserFlightDetailId")
                        .HasColumnType("int");

                    b.HasKey("FlightDeatailId");

                    b.HasIndex("UserFlightDetailId");

                    b.ToTable("FlightDetails");
                });

            modelBuilder.Entity("EntityLayer.Concrete.PlaneDetail", b =>
                {
                    b.Property<int>("PlaneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlaneId"), 1L, 1);

                    b.Property<int>("FlightDetailId")
                        .HasColumnType("int");

                    b.Property<string>("PlaneDescription")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PlaneName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PlaneId");

                    b.HasIndex("FlightDetailId");

                    b.ToTable("PlaneDetails");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SeatDetail", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatId"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PlaneDetailId")
                        .HasColumnType("int");

                    b.Property<string>("SeatName")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("SeatType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SeatId");

                    b.HasIndex("PlaneDetailId");

                    b.ToTable("SeatDetails");
                });

            modelBuilder.Entity("EntityLayer.Concrete.UserDetail", b =>
                {
                    b.Property<int>("UserDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserDetailId"), 1L, 1);

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserFirstName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("UserFlightDetailId")
                        .HasColumnType("int");

                    b.Property<string>("UserLastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserPhone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("UserDetailId");

                    b.HasIndex("UserFlightDetailId");

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("EntityLayer.Concrete.UserFlightDetail", b =>
                {
                    b.Property<int>("UserFlightDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserFlightDetailId"), 1L, 1);

                    b.HasKey("UserFlightDetailId");

                    b.ToTable("UserFlightDetails");
                });

            modelBuilder.Entity("EntityLayer.Concrete.CityDetail", b =>
                {
                    b.HasOne("EntityLayer.Concrete.FlightDetail", "FlightDetail")
                        .WithMany("FromWhere")
                        .HasForeignKey("FlightDetailFlightDeatailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlightDetail");
                });

            modelBuilder.Entity("EntityLayer.Concrete.FlightDetail", b =>
                {
                    b.HasOne("EntityLayer.Concrete.UserFlightDetail", "UserFlightDetails")
                        .WithMany("FlightDetails")
                        .HasForeignKey("UserFlightDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserFlightDetails");
                });

            modelBuilder.Entity("EntityLayer.Concrete.PlaneDetail", b =>
                {
                    b.HasOne("EntityLayer.Concrete.FlightDetail", "FlightDetail")
                        .WithMany("Planes")
                        .HasForeignKey("FlightDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlightDetail");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SeatDetail", b =>
                {
                    b.HasOne("EntityLayer.Concrete.PlaneDetail", "PlaneDetail")
                        .WithMany("SeatDetails")
                        .HasForeignKey("PlaneDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlaneDetail");
                });

            modelBuilder.Entity("EntityLayer.Concrete.UserDetail", b =>
                {
                    b.HasOne("EntityLayer.Concrete.UserFlightDetail", "UserFlightDetails")
                        .WithMany("UserDetails")
                        .HasForeignKey("UserFlightDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserFlightDetails");
                });

            modelBuilder.Entity("EntityLayer.Concrete.FlightDetail", b =>
                {
                    b.Navigation("FromWhere");

                    b.Navigation("Planes");
                });

            modelBuilder.Entity("EntityLayer.Concrete.PlaneDetail", b =>
                {
                    b.Navigation("SeatDetails");
                });

            modelBuilder.Entity("EntityLayer.Concrete.UserFlightDetail", b =>
                {
                    b.Navigation("FlightDetails");

                    b.Navigation("UserDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
